[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13]=SP;
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512-1;

alias userSP R0;
userSP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];

alias syscall R1;
syscall=[[PTBR+((userSP-5)/512)*2]*512+(userSP-5)%512];


if(syscall == 11) then
	[[PTBR+((userSP-1)/512)*2]*512+(userSP-1)%512]=[SYSTEM_STATUS_TABLE+1];
endif;

if(syscall == 12) then
	[[PTBR+((userSP-1)/512)*2]*512+(userSP-1)%512]=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+2];
endif;

if(syscall == 13) then
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=13;
	alias pid R2;
	pid=[[PTBR+2*((userSP-4)/512)]*512+(userSP-4)%512];
	if(pid==[SYSTEM_STATUS_TABLE+1] || [PROCESS_TABLE+pid*16+4]==TERMINATED || (pid<0) || (pid>=16) ) then
		[[PTBR+((userSP-1)/512)*2]*512+(userSP-1)%512]=-1;
		[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
		SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
		ireturn;
	endif;
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+4]=WAIT_PROCESS;
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+5]=pid;
	multipush(R0,R1,R2);
	call MOD_5;
	multipop(R0,R1,R2);
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
	[[PTBR+((userSP-1)/512)*2]*512+(userSP-1)%512]=0;
	SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
	ireturn;
endif;

if(syscall == 14) then 
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=14;
	alias counter R2;
	counter=0;
	while(counter < 16) do
		if([PROCESS_TABLE+counter*16+4]==WAIT_PROCESS && [PROCESS_TABLE+counter*16+5]==[SYSTEM_STATUS_TABLE+1] ) then 
			[PROCESS_TABLE+counter*16+4]=READY;
		endif;
		counter=counter+1;
	endwhile;
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
	[[PTBR+((userSP-1)/512)*2]*512+(userSP-1)%512]=0;
	SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
	ireturn;
endif;

SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
ireturn;
