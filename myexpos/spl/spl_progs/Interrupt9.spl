alias userSP R0;
userSP=SP;
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512-1;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=9;

alias name R1;
name=[[PTBR+2*(userSP-4)/512]*512+(userSP-4)%512];

alias inodestart R2;
inodestart=INODE_TABLE;

alias counter R3;
counter=0;

while(counter<60) do
	if(name== [inodestart+counter*16+1]  && EXEC==[inodestart+counter*16]) then
		break;
	endif;
	counter=counter+1;
endwhile;

if(counter==60) then
	SP=userSP;
	[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
	[[PTBR+2*(userSP-1)/512]*512+(userSP-1)%512]=-1;
	ireturn;
endif;
	
multipush(R0,R1,R2,R3);

alias funnum R1;
alias pid R2;
funnum=3;
pid=[SYSTEM_STATUS_TABLE+1];
call MOD_1;

multipop(R0,R1,R2,R3);


alias upage R4;
upage=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11];

[MEMORY_FREE_LIST+upage]=[MEMORY_FREE_LIST+upage]+1;
[SYSTEM_STATUS_TABLE+2]=[SYSTEM_STATUS_TABLE+2]-1;

SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512-1;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+4]=RUNNING;

[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+7]=INODE_TABLE+counter*16;
//setting up library
[PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+0] = 63;
[PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+1] = "0100";
[PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+2] = 64;
[PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+3] = "0100";

multipush(R0,R1,R2,R3,R4);
alias functionnum R1;
alias retval R0;
pid=[SYSTEM_STATUS_TABLE+1];

functionnum=1;
call MOD_2;
[PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+16]=retval;
[PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+17] = "0110";

functionnum=1;
call MOD_2;
[PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+18]=retval;
[PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+19] = "0110";

[PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+4]=-1;
[PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+5] = "0000";

[PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+6]=-1;
[PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+7] = "0000";

multipop(R0,R1,R2,R3,R4);

multipush(R0,R1,R2,R3,R4);

alias blocknum R2;
blocknum = [INODE_TABLE + counter*16 + 8];

alias funnum R1;
funnum = 5;

call MOD_2;

alias returnval R0;

[PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+8] = returnval;
[PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+9] = "0100";

[PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+10] = -1;
[PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+11] = "0000";

[PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+12] = -1;
[PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+13] = "0000";

[PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+14] = -1;
[PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+15] = "0000";

multipop(R0,R1,R2,R3,R4);

alias i R5;
i=0;
while(i<10) do 
	[DISK_MAP_TABLE + [SYSTEM_STATUS_TABLE + 1]*10 + i] = -1;
	i=i+1;
endwhile;

[DISK_MAP_TABLE + [SYSTEM_STATUS_TABLE + 1]*10 + 4] = [INODE_TABLE + counter*16 + 8];

[[PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+16]*512]=[[PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+8]*512+1];

SP=8*512;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
breakpoint;
ireturn;
